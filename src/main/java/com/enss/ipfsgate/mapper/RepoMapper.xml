<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.enss.ipfsgate.mapper.RepoMapper">

    <!-- 仓库列表result list -->
    <resultMap id="repoResultMap" type="com.enss.ipfsgate.model.repo.RepoInfo">
        <result property="rId" column="id" />
        <result property="rName" column="repo_name" />
        <result property="rUser" column="user_name" />
        <result property="repo_label" column="repo_label" />
        <result property="repo_language" column="repo_language" />
        <result property="desc" column="repo_desc" />
    </resultMap>

    <!-- 文件列表result list -->
    <resultMap id="repoFileResultMap" type="com.enss.ipfsgate.model.repo.vo.RepoFileVo">
        <result property="id" column="id" />
        <result property="repoId" column="repo_id" />
        <result property="branchId" column="branch_id" />
        <result property="fileName" column="file_name" />
        <result property="relativePath" column="relative_path" />
        <result property="uploadDate" column="upload_date" />
        <result property="fileType" column="file_type" />
        <result property="fileTypeName" column="file_type_name" />
        <result property="fileSize" column="file_size" />
        <result property="fileSizeStr" column="file_size_str" />
        <result property="tempSavePath" column="temp_save_path" />
        <result property="tempUrl" column="temp_url" />
        <result property="ipfsHash" column="ipfs_hash" />
        <result property="ipfsState" column="ipfs_state" />
        <result property="chainHash" column="chain_hash" />
        <result property="chainState" column="chain_state" />
        <result property="chainHeight" column="chain_height" />
        <result property="remark" column="remark" />
    </resultMap>

    <!-- 分支列表result list -->
    <resultMap id="branchResultMap" type="com.enss.ipfsgate.model.repo.vo.RepoBranchVo">
        <result property="id" column="id" />
        <result property="repoId" column="repo_id" />
        <result property="branchName" column="branch_name" />
        <result property="desc" column="repo_desc" />
        <association property="repoFileList" javaType="java.util.List" column="id" select="searchBranchFileList" />
    </resultMap>
    <!-- 查询分支包含的文件列表 -->
    <select id="searchBranchFileList" parameterType="java.lang.Integer" resultMap="repoFileResultMap">
        select * from repo_file where branch_id=#{id}
    </select>

    <!-- 仓库模糊查询 -->
    <select id="search" parameterType="com.enss.ipfsgate.model.repo.vo.RepoInfoVo" resultMap="repoResultMap">
        SELECT *
        FROM repo
        where
        (
            repo_name like CONCAT('%',#{keyword},'%')
            <if test="keyword!=null and keyword !=''">
                or user_name like CONCAT('%',#{keyword},'%')
                or repo_label like CONCAT('%',#{keyword},'%')
            </if>
        )
        <if test="sort!=null and sort !=''">
            order by ${sort}
        </if>
    </select>
    <!-- 相同条件查询总条数，分页用 -->
    <select id="searchCount" parameterType="com.enss.ipfsgate.model.repo.vo.RepoInfoVo" resultType="java.lang.Integer">
        SELECT count(*)
        FROM repo
        where
        (
            repo_name like CONCAT('%',#{keyword},'%')
            <if test="keyword!=null and keyword !=''">
                or user_name like CONCAT('%',#{keyword},'%')
                or repo_label like CONCAT('%',#{keyword},'%')
            </if>
        )
        <if test="sort!=null and sort !=''">
            order by ${sort}
        </if>
    </select>
    <!-- 单查 -->
    <select id="searchDetail" parameterType="com.enss.ipfsgate.model.repo.vo.RepoInfoVo" resultMap="repoResultMap">
        select * from repo where id=#{rId}
    </select>

    <!-- 查询所有仓库 -->
    <select id="selectAll" resultMap="repoResultMap">
        select *
        from repo
    </select>
    <!-- 查询活跃仓库 -->
    <select id="activeRepo" resultMap="repoResultMap">
        SELECT *
        FROM repo
        WHERE repo_name IN (
            SELECT name
            FROM (
                     SELECT repo_name AS name, COUNT(*) AS count
                     FROM apply
                     GROUP BY repo_name
                     ORDER BY count DESC LIMIT 2
            ) AS subquery
        )
    </select>
    <insert id="insert" useGeneratedKeys="true" keyProperty="rId" parameterType="com.enss.ipfsgate.model.repo.RepoInfo">
        insert into repo (repo_name, user_name, repo_label, repo_language)
        values (#{rName,jdbcType=VARCHAR}, #{rUser,jdbcType=VARCHAR},
                #{repo_label,jdbcType=VARCHAR}, #{repo_language,jdbcType=VARCHAR})
    </insert>
    <!-- 查询某人的所有仓库 -->
    <select id="onesRepo" parameterType="String" resultMap="repoResultMap">
        SELECT *
        FROM repo
        WHERE user_name = #{user_name,jdbcType=VARCHAR}
    </select>

    <!-- 查询某人的参与仓库，有时间可以优化为使用id作为查询条件 -->
    <select id="someoneInRepo" parameterType="String" resultMap="repoResultMap">
        SELECT *
        FROM repo
        WHERE repo_name IN (
            SELECT repo_name
            FROM repo_member
            WHERE member_name= #{member_name,jdbcType=VARCHAR}
            and member_manager = 0
            )
    </select>

    <!-- 查询某个仓库底下的所有分支及文件列表 -->
    <select id="selectBranchList" parameterType="java.lang.Integer" resultMap="branchResultMap">
        SELECT * FROM repo_branch where repo_id = #{repoId}
    </select>

    <insert id="addBranch" useGeneratedKeys="true" keyColumn="id" keyProperty="id" parameterType="com.enss.ipfsgate.model.repo.RepoBranch">
        insert into repo_branch
        (
            repo_id,branch_name
        )
        values
        (
            #{repoId},#{branchName}
        )
    </insert>

    <insert id="addDepo"  useGeneratedKeys="true" keyColumn="id" keyProperty="rId"  parameterType="com.enss.ipfsgate.model.repo.RepoInfo">
        insert into repo (repo_name, user_name, repo_label, repo_language,repo_desc)
        values (#{rName,jdbcType=VARCHAR}, #{rUser,jdbcType=VARCHAR},
                #{repo_label,jdbcType=VARCHAR}, #{repo_language,jdbcType=VARCHAR},#{desc,jdbcType=VARCHAR})
    </insert>


</mapper>